(()=>{"use strict";var e={d:(t,o)=>{for(var s in o)e.o(o,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:o[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{useCurrentPost:()=>u,useCurrentPostTaxonomies:()=>l,usePost:()=>p,usePostTypes:()=>c});const o=window.lodash,s=window.wp.data,r=window.wp.editor,n=window.wp.coreData,a=window.wp.blockEditor,i=window.wp.blocks,d=window.wp.element,c=()=>(0,s.useSelect)((e=>e(n.store).getPostTypes()),[])||[],p=(e,t)=>(0,s.useSelect)((o=>{const{getEditedEntityRecord:s,getEntityRecords:r,hasFinishedResolution:a}=o(n.store),i=["postType",t,e],d=s(...i),c=r("taxonomy","post_tag",{context:"view",per_page:100,include:d.tags}),p=c?c.map((e=>e.name)):[];return p?.length&&(d.tagNames=p),{hasResolvedPost:a("getEditedEntityRecord",i),post:d}})),u=(e={})=>{const{context:t={}}=e,[c,p]=(0,d.useState)(null),{post:u,postType:l,postId:y,hasResolvedPost:m,hasResolvedPostTags:g}=(0,s.useSelect)((e=>{const{getEditedEntityRecord:o,hasFinishedResolution:s,getEntityRecords:a,getMedia:i}=e(n.store),{getCurrentPostId:d,getCurrentPostType:c}=e(r.store),{postType:p=c(),postId:u=d()}=t,l=["postType",p,u],y=o(...l),m=i(y.featured_media);y.featured_image_url=m?m.source_url:"";const g=["taxonomy","post_tag",{context:"view",per_page:100,include:y.tags}],w=a(...g),h=w?w.map((e=>e.name)):[];return h?.length&&(y.tagNames=h),{post:y,hasResolvedPost:s("getEditedEntityRecord",l),hasResolvedPostTags:s("getEntityRecords",g),postType:p,postId:u}}),[t]);(0,d.useEffect)((()=>{u&&m&&g&&(c&&(0,o.isEqual)(c,u)||p(u))}),[m,g,u]);const{editEntityRecord:w}=(0,s.useDispatch)(n.store),{resetEditorBlocks:h}=(0,s.useDispatch)(r.store),{insertBlocks:T,resetBlocks:E}=(0,s.useDispatch)(a.store),P=(0,d.useCallback)(((e,t)=>{"content"===e&&c.content&&(E([]),h()),setTimeout((()=>{if("content"===e){const e=(0,i.rawHandler)({HTML:t});T(e)}else w("postType",l,y,{[e]:t})}),50)}),[c]);return{post:c,setPost:P}},l=()=>{const{post:e,setPost:t}=u(),{saveEntityRecord:o}=(0,s.useDispatch)(n.store),a=async(e,t)=>{try{return await o("taxonomy",e,t,{throwOnError:!0})}catch(e){if("term_exists"!==e.code)throw e;return{id:e.data.term_id,name:t.name}}},{terms:i,taxonomies:d}=(0,s.useSelect)((t=>{const{getEditedPostAttribute:o}=t(r.store),{getTaxonomy:s}=t(n.store),a=e?._links["wp:term"]?.map((e=>e.taxonomy)),i=a?.reduce(((e,t)=>{const r=s(t),n=r?o(r.rest_base):[];return e[t]=n,e}),{});return{taxonomies:a,terms:i}}));return{terms:i,taxonomies:d,setTaxonomyTerms:async(e,o)=>{const{select:s}=wp.data,{getTaxonomy:r}=s(n.store),{rest_base:d}=r(e)||{},c=i[e],p=[];for(let t=0;t<o.length;t++){const s=o[t];try{const t=await a(e,{name:s});c.includes(t.id)||p.push(t.id)}catch(e){console.log("error: ",e)}}const u=[...c,...p];t(d,u)}}};(window.aicp=window.aicp||{}).hooks=t})();