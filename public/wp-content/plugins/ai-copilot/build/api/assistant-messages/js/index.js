(()=>{"use strict";var e={d:(s,a)=>{for(var t in a)e.o(a,t)&&!e.o(s,t)&&Object.defineProperty(s,t,{enumerable:!0,get:a[t]})},o:(e,s)=>Object.prototype.hasOwnProperty.call(e,s),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},s={};e.r(s),e.d(s,{fetchServicesAssistantMessagesOpenAi:()=>n});const a=window.aicp.helpers;class t extends Error{constructor(e){super(`Invalid Assistant Message Open AI mode: ${e}`),this.name="InvalidAssistantMessagesOpenAIModeError"}}const{QUADLAYERS_AICP_API_ASSISTANT_MESSAGES_REST_ROUTES:r}=aicpApiAssistantMessages,n=async(e,s)=>{try{const n=((e,s)=>{switch(e){case"create":return s;case"messages":return{message_openai_before:s.openai_id,limit:1,...s};default:throw new t(e)}})(e,s),o=await(async(e,s)=>{switch(e){case"create":return await(({data:e})=>(0,a.apiFetch)({path:r.assistants_messages,data:e,method:"POST"}))({data:s});case"messages":return await(({data:e})=>(0,a.apiFetch)({path:`${r.assistants_messages}${(0,a.buildParams)(e)}`,method:"GET"}))({data:s});default:throw new t(e)}})(e,n);if(!(0,a.handleFrontendApiResponse)(o))throw new Error(`${o?.code} ${o?.message}`);return o}catch(e){return console.error(e),null}};(window.aicp=window.aicp||{})["api-assistant-messages"]=s})();